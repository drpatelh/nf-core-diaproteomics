{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/diaproteomics/master/nextflow_schema.json",
    "title": "nf-core/diaproteomics pipeline parameters",
    "description": "Automated quantitative analysis of DIA proteomics mass spectrometry measurements.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fab fa-think-peaks",
                    "description": "Input sample sheet (containing path and meta data of raw or mzML files)",
                    "help_text": "Use this to specify a sample sheet table including your input raw or mzml files as well as their metainformation such as BatchID, MSstats_Condition and MSstats_BioReplicate (of note: the BioReplicate column is optional). For example:\n\n| Sample   | BatchID      | MSstats_Condition  | MSstats_BioReplicate |   Spectra_Filepath                      |\n| -----|:------------:| ----------:|----------:|------------------------------------------:|\n| 1    | MelanomaStudy |      Malignant     |  BioReplicate1  |   data/Melanoma_DIA_standard_rep1.raw    |\n| 2    | MelanomaStudy |      Malignant     |  BioReplicate1  |   data/Melanoma_DIA_standard_rep2.raw    |\n| 3    | MelanomaStudy |      Benign     |  BioReplicate2  |   data/SkinTissue_DIA_standard_rep1.raw    |\n| 4    | MelanomaStudy |      Benign     |  BioReplicate2  |   data/SkinTissue_DIA_standard_rep2.raw    |\n| 5    | BreastCancerStudy |      Malignant     |  BioReplicate1  |   data/BreastCancer_DIA_standard_rep1.raw    |\n| 6    | BreastCancerStudy |      Malignant     |  BioReplicate1  |   data/BreastCancer_DIA_standard_rep2.raw    |\n| 7    | BreastCancerStudy |      Benign     |  BioReplicate2  |   data/BreastTissue_DIA_standard_rep1.raw    |\n| 8    | BreastCancerStudy |      Benign     |  BioReplicate2  |   data/BreastTissue_DIA_standard_rep2.raw    |"
                },
                "input_spectral_library": {
                    "type": "string",
                    "fa_icon": "fas fa-book",
                    "description": "Input sample sheet of spectral libraries (tsv, pqp, TraML)",
                    "help_text": "Use this to specify a sample sheet table including your input spectral library files as well as their metainformation such as BatchID and MSstats_Condition. For example:\n\n| Sample   | BatchID      |   Library_Filepath                       |\n| -----|:------------:|------------------------------------------:|\n| 1    | MelanomaStudy |   data/Melanoma_library.tsv    |\n| 2    | BreastCancerStudy |   data/BraCa_library.tsv    |"
                },
                "irts": {
                    "type": "string",
                    "description": "Path to internal retention time standard sample sheet (tsv, pqp, TraML)",
                    "help_text": "Use this to specify a sample sheet table including your input internal retention time spectral library files as well as their metainformation such as BatchID and MSstats_Condition. For example:\n\n| Sample      | BatchID      |   irt_Filepath                       |\n| -----|:------------:|------------------------------------------:|\n| 1    | MelanomaStudy |   data/Melanoma_irt_library.tsv    |\n| 2    | BreastCancerStudy |   data/BraCa_irt_library.tsv    |",
                    "fa_icon": "fas fa-book"
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "spectral_library_generation": {
            "title": "Spectral library generation",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "generate_spectral_library": {
                    "type": "boolean",
                    "description": "Set this flag if the spectral library should be generated using EasyPQP from provided DDA data - identification search results and corresponding raw data.",
                    "fa_icon": "fas fa-plus-square"
                },
                "input_sheet_dda": {
                    "type": "string",
                    "description": "Input sample sheet to use for library generation eg. DDA raw data (mzML) and DDA identification data (pepXML, mzid, idXML)",
                    "help_text": "Use this to specify a sample sheet table including your input DDA raw or mzml files as well as their corresponding peptide identification files and  BatchID metainformation. For example:\n\n| Sample   | BatchID      | Spectra_Filepath  |   Id_Filepath                       |\n| -----|:------------:| ----------:|------------------------------------------:|\n| 1    | MelanomaStudy |      data/Melanoma_DDA_rep1.mzML     |   data/Melanoma_DDA_rep1.pepXML    |\n| 2    | MelanomaStudy |      data/Melanoma_DDA_rep2.mzML     |   data/Melanoma_DDA_rep2.pepXML    |\n| 3    | BreastCancerStudy |      data/BraCa_DDA_rep1.mzML     |   data/BraCa_DDA_rep1.pepXML    |\n| 4    | BreastCancerStudy |      data/BraCa_DDA_rep2.mzML     |   data/BraCa_DDA_rep2.pepXML    |\n",
                    "fa_icon": "fas fa-file-csv"
                },
                "library_rt_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "fa_icon": "fab fa-think-peaks",
                    "description": "PSM fdr threshold to align peptide ids with reference run."
                },
                "min_transitions": {
                    "type": "integer",
                    "default": 4,
                    "description": "Minimum number of transitions for assay",
                    "fa_icon": "fas fa-compress-alt"
                },
                "max_transitions": {
                    "type": "integer",
                    "default": 6,
                    "description": "Maximum number of transitions for assay",
                    "fa_icon": "fas fa-expand-alt"
                },
                "decoy_method": {
                    "type": "string",
                    "default": "shuffle",
                    "description": "Method for generating decoys",
                    "enum": [
                        "shuffle",
                        "pseudo-reverse",
                        "reverse",
                        "shift"
                    ],
                    "fa_icon": "fas fa-user-secret"
                },
                "skip_decoy_generation": {
                    "type": "boolean",
                    "fa_icon": "fab fa-think-peaks",
                    "description": "Set this flag if using a spectral library that already includes decoy sequences and therefor skip assay and decoy generation."
                },
                "unimod": {
                    "type": "string",
                    "help_text": "Example file:\nhttps://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/unimod.xml",
                    "description": "Path to unimod file needs to be provided",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/diaproteomics/unimod.xml",
                    "fa_icon": "fas fa-file-alt"
                },
                "skip_dia_processing": {
                    "type": "boolean",
                    "description": "Set this flag if you only want to generate spectral libraries from DDA data",
                    "fa_icon": "fas fa-fast-forward"
                }
            },
            "fa_icon": "fas fa-signal"
        },
        "pseudo_irt_generation": {
            "title": "Pseudo iRT generation",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "generate_pseudo_irts": {
                    "type": "boolean",
                    "description": "Set this flag if pseudo internal retention time standards should be generated using EasyPQP from provided DDA data - identification search results and corresponding raw data.",
                    "fa_icon": "fas fa-clock"
                },
                "n_irts": {
                    "type": "integer",
                    "default": 250,
                    "description": "Number of pseudo irts selected from dda identifications based on the best q-value",
                    "fa_icon": "fas fa-sort-numeric-up-alt"
                },
                "irts_from_outer_quantiles": {
                    "type": "boolean",
                    "description": "Set this flag if pseudo irts should be selected from the 1st and 4th RT quantile only",
                    "fa_icon": "fas fa-expand"
                }
            },
            "fa_icon": "fas fa-stopwatch"
        },
        "spectral_library_merging": {
            "title": "Spectral library merging",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "merge_libraries": {
                    "type": "boolean",
                    "description": "Set this flag if the libraries defined in the input or by generation should be merged according to the BatchID",
                    "fa_icon": "fas fa-code-branch"
                }
            },
            "fa_icon": "fas fa-project-diagram"
        },
        "spectral_library_rt_alignment": {
            "title": "Spectral library RT alignment",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "align_libraries": {
                    "type": "boolean",
                    "description": "Set this flag if pairwise RT alignment should be applied to libraries when merging.",
                    "fa_icon": "fas fa-align-justify"
                },
                "min_overlap_for_merging": {
                    "type": "integer",
                    "default": 100,
                    "description": "Minimum number of peptides to compute RT alignment during pairwise merging of libraries",
                    "fa_icon": "fas fa-compress"
                }
            },
            "fa_icon": "fas fa-align-left"
        },
        "dia_spectral_library_search": {
            "title": "DIA spectral library search",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "mz_extraction_window": {
                    "type": "integer",
                    "default": 30,
                    "description": "Mass tolerance for transition extraction (ppm)",
                    "fa_icon": "fas fa-weight-hanging"
                },
                "mz_extraction_window_unit": {
                    "type": "string",
                    "default": "ppm",
                    "description": "Unit for mz window",
                    "fa_icon": "fas fa-ruler"
                },
                "mz_extraction_window_ms1": {
                    "type": "integer",
                    "default": 10,
                    "description": "Mass tolerance for precursor transition extraction (ppm)",
                    "fa_icon": "fas fa-balance-scale-left"
                },
                "mz_extraction_window_ms1_unit": {
                    "type": "string",
                    "default": "ppm",
                    "description": "Unit for mz window",
                    "fa_icon": "fas fa-ruler"
                },
                "rt_extraction_window": {
                    "type": "integer",
                    "default": 600,
                    "description": "RT window for transition extraction (seconds)"
                },
                "irt_min_rsq": {
                    "type": "number",
                    "default": 0.95,
                    "description": "Minimal random mean squared error for irt RT alignment",
                    "fa_icon": "fas fa-crosshairs"
                },
                "irt_n_bins": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of bins defined for the RT Normalization",
                    "fa_icon": "fas fa-arrows-alt-h"
                },
                "irt_min_bins_covered": {
                    "type": "integer",
                    "default": 8,
                    "description": "Number of bins that have to be covered for the RT Normalization",
                    "fa_icon": "fas fa-chart-bar"
                },
                "irt_alignment_method": {
                    "type": "string",
                    "default": "linear",
                    "description": "Method for irt RT alignment for example",
                    "enum": [
                        "linear",
                        "lowess"
                    ],
                    "fa_icon": "fas fa-cash-register"
                },
                "force_option": {
                    "type": "boolean",
                    "description": "Force the analysis of the OpenSwathWorkflow despite severe warnings",
                    "fa_icon": "fas fa-exclamation-triangle"
                },
                "use_ms1": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to use ms1 information for scoring and extraction",
                    "fa_icon": "far fa-hand-point-up"
                },
                "min_upper_edge_dist": {
                    "type": "integer",
                    "description": "Minimal distance to the upper edge of a Swath window to still consider a precursor, in Thomson",
                    "fa_icon": "fas fa-border-style"
                },
                "cache_option": {
                    "type": "string",
                    "default": "normal",
                    "description": "Set mode whether to work in memory or to store data as cache first",
                    "enum": [
                        "normal",
                        "cache",
                        "cacheWorkingInMemory",
                        "WorkingInMemory"
                    ],
                    "fa_icon": "fas fa-memory"
                }
            },
            "fa_icon": "fas fa-search"
        },
        "false_discovery_rate_estimation": {
            "title": "False discovery rate estimation",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "pyprophet_classifier": {
                    "type": "string",
                    "default": "LDA",
                    "description": "Machine learning classifier used for pyprophet target / decoy separation",
                    "enum": [
                        "LDA",
                        "XGBoost"
                    ],
                    "fa_icon": "fas fa-robot"
                },
                "pyprophet_fdr_ms_level": {
                    "type": "string",
                    "default": "ms1ms2",
                    "description": "MS Level of pyprophet FDR calculation",
                    "enum": [
                        "ms1",
                        "ms2",
                        "ms1ms2"
                    ],
                    "fa_icon": "fas fa-chart-line"
                },
                "pyprophet_global_fdr_level": {
                    "type": "string",
                    "description": "Abstraction level of pyrophet FDR calculation",
                    "enum": [
                        "",
                        "peptide",
                        "protein"
                    ],
                    "fa_icon": "fas fa-globe-africa"
                },
                "pyprophet_peakgroup_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Threshold for pyprophet FDR filtering on peakgroup abstraction level",
                    "fa_icon": "fas fa-mountain"
                },
                "pyprophet_peptide_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Threshold for pyprophet FDR filtering on peptide abstraction level",
                    "fa_icon": "fas fa-compress-arrows-alt"
                },
                "pyprophet_protein_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Threshold for pyprophet FDR filtering on protein abstraction level",
                    "fa_icon": "fas fa-microscope"
                },
                "pyprophet_pi0_start": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Start for pyprophet non-parametric pi0 estimation",
                    "fa_icon": "far fa-play-circle"
                },
                "pyprophet_pi0_end": {
                    "type": "number",
                    "default": 0.5,
                    "description": "End for pyprophet non-parametric pi0 estimation",
                    "fa_icon": "far fa-stop-circle"
                },
                "pyprophet_pi0_steps": {
                    "type": "number",
                    "default": 0.05,
                    "description": "Steps for pyprophet non-parametric pi0 estimation",
                    "fa_icon": "fas fa-calculator"
                }
            },
            "fa_icon": "fas fa-fire-alt"
        },
        "ms2_chromatogram_alignment": {
            "title": "MS2 chromatogram alignment",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "dialignr_global_align_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "DIAlignR global alignment FDR threshold: After the chromatogram alignment all peaks should still satisfy the global alignment FDR threshold.",
                    "fa_icon": "fas fa-globe-asia"
                },
                "dialignr_analyte_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "DIAlignR analyte FDR threshold: Before the chromatogram alignment only peaks satisfying this threshold will be matched across runs.",
                    "fa_icon": "fas fa-step-backward"
                },
                "dialignr_unalign_fdr": {
                    "type": "number",
                    "default": 0.01,
                    "description": "DIAlignR unalignment FDR threshold: XICs below this threshold will be considered valid without any alignment.",
                    "fa_icon": "fas fa-align-center"
                },
                "dialignr_align_fdr": {
                    "type": "number",
                    "default": 0.05,
                    "description": "DIAlignR alignment FDR threshold: After the chromatogram alignment aligned peaks should satisfy this threshold.",
                    "fa_icon": "fas fa-step-forward"
                },
                "dialignr_query_fdr": {
                    "type": "number",
                    "default": 0.05,
                    "description": "DIAlignR query FDR threshold: During the chromatogram alignment only peaks satisfying this maximum FDR threshold will be considered as potential matches.",
                    "fa_icon": "fas fa-filter"
                },
                "dialignr_xicfilter": {
                    "type": "string",
                    "default": "sgolay",
                    "enum": [
                        "sgolay",
                        "boxcar",
                        "gaussian",
                        "loess",
                        "none"
                    ],
                    "description": "DIAlignR XICfilter parameter",
                    "fa_icon": "fas fa-funnel-dollar"
                },
                "dialignr_parallelization": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether DIAlignR should be executed using multithreading (may cause errors)",
                    "fa_icon": "fas fa-microchip"
                }
            },
            "fa_icon": "fas fa-balance-scale-right"
        },
        "output_summary": {
            "title": "Output summary",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "run_msstats": {
                    "type": "boolean",
                    "default": true,
                    "fa_icon": "fas fa-calculator",
                    "description": "Set this flag if statistical normalization and visualizations should be generated using MSstats"
                },
                "generate_plots": {
                    "type": "boolean",
                    "description": "Set this flag if output plots should be generated.",
                    "help_text": "1) BarChartProtein/Peptide Counts\n2) Pie Chart: Peptide Charge distribution\n3) Density Scatter: Library vs run RT deviations for all identifications\n4) Heatmap: Peptide quantities across MS runs\n5) Pyprophet score plots\n\nIn addition MSstats will run and export comparative protein statistics plots such as Volcano plots if protein level is specified.",
                    "fa_icon": "fas fa-images",
                    "default": true
                },
                "mztab_export": {
                    "type": "boolean",
                    "fa_icon": "fas fa-align-left",
                    "description": "Optional mzTab export (Warning: the mzTab format is not yet well supported for DIA)"
                }
            },
            "fa_icon": "fas fa-align-left"
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^[\\d\\.]+\\s*.(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^[\\d\\.]+\\.*(s|m|h|d)$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/spectral_library_generation"
        },
        {
            "$ref": "#/definitions/pseudo_irt_generation"
        },
        {
            "$ref": "#/definitions/spectral_library_merging"
        },
        {
            "$ref": "#/definitions/spectral_library_rt_alignment"
        },
        {
            "$ref": "#/definitions/dia_spectral_library_search"
        },
        {
            "$ref": "#/definitions/false_discovery_rate_estimation"
        },
        {
            "$ref": "#/definitions/ms2_chromatogram_alignment"
        },
        {
            "$ref": "#/definitions/output_summary"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ],
    "properties": {
        "enable_ms1": {
            "type": "boolean",
            "default": true,
	    "description": "Extract the precursor ion trace(s) and use for scoring if present"
        },
        "enable_ipf": {
            "type": "boolean",
            "default": true,
	    "description": "Enable additional scoring of identification assays using IPF (see online documentation)"
        },
        "extra_rt_extraction_window": {
            "type": "integer",
            "default": 0,
	    "description": "Output an XIC with a RT-window by this much larger (e.g. to visually inspect a larger area of the chromatogram)"
        },
        "ion_mobility_window": {
            "type": "integer",
            "default": -1,
	    "description": "Extraction window in ion mobility dimension (in milliseconds). This is the full window size, e.g. a value of 10 milliseconds would extract 5 milliseconds on either side."
        },
        "im_extraction_window_ms1": {
            "type": "integer",
            "default": -1,
	    "description": "Extraction window in ion mobility dimension for MS1 (in milliseconds)."
        },
        "use_ms1_ion_mobility": {
            "type": "boolean",
            "default": true,
	    "description": "Also perform precursor extraction using the same ion mobility window as for fragment ion extraction"
        },
        "irt_mz_extratcion_window": {
            "type": "integer",
            "default": 50,
	    "description": "Unit for mz extraction"
        },
        "irt_mz_extraction_window_unit": {
            "type": "string",
            "default": "ppm",
	    "description"
        },
        "irt_im_extraction_window": {
            "type": "integer",
            "default": -1,
	    "description": "Ion mobility extraction window used for iRT (in 1/K0 or milliseconds)"
        },
        "matching_windows_only": {
            "type": "string",
	    "default": , "",
	    "description": ""
        },
        "min_coverage": {
            "type": "number",
            "default": 0.6,
	    "description": "Minimum relative amount of RT peptides to keep"
        },
        "split_file_input": {
            "type": "bool",
	    "default": false,
	    "description": "The input files each contain one single SWATH (alternatively: all SWATH are in separate files)"
        },
        "use_elution_model_score": {
            "type": "bool",
	    "default": false,
	    "description": "Turn on elution model score (EMG fit to peak)"
        },
        "mz_correction_function": {
            "type": "string",
            "default": "none",
	    "description": "Use the retention time normalization peptide MS2 masses to perform a mass correction (linear, weighted by intensity linear or quadratic) of all spectra."
        },
        "extraction_function": {
            "type": "string",
            "default": "tophat",
	    "description": "Function used to extract the signal"
        },
        "outer_loop_threads": {
            "type": "integer",
            "default": -1,
	    "description": "How many threads should be used for the outer loop (-1 use all threads, use 4 to analyze 4 SWATH windows in memory at once)."
        },
        "ms1_isotopes": {
            "type": "integer",
            "default": 3,
	    "description": "The number of MS1 isotopes used for extraction"
        },
        "no_progress": {
            "type": "bool",
	    "default": false,
	    "description": "Disables progress logging to command line"
        },
        "test": {
            "type": "bool",
	    "default": false,
	    "description": "Enables the test mode (needed for internal use only)"
        },
        "ms1_im_calibration": {
            "type": "bool",
	    "default": "Whether to use MS1 precursor data for the ion mobility calibration (default = false, uses MS2 / fragment ions for calibration)",
	    "description": "Whether to use MS1 precursor data for the ion mobility calibration (default = false, uses MS2 / fragment ions for calibration)"
        },
        "debug_im_file": {
            "type": "string",
	    "default": "",
	    "description": "Debug file for Ion Mobility calibration."
        },
        "debug_mz_file": {
            "type": "string",
            "default": "",
	    "description": "Debug file for m/z calibration."
        },
        "retentionTimeInterpretation": {
            "type": "string",
            "default": "iRT",
	    "description": "How to interpret the provided retention time (the retention time column can either be interpreted to be in iRT, minutes or seconds)"
        },
        "override_group_label_check": {
            "type": "string",
            "default": "linear",
	    "description": "Override an internal check that assures that all members of the same PeptideGroupLabel have the same PeptideSequence (this ensures that only different isotopic forms of the same peptide can be grouped together in the same label group). Only turn this off if you know what you are doing."
        },
        "force_invalid_mods": {
            "type": "bool",
	    "default": false,
	    "description": "Force reading even if invalid modifications are encountered (OpenMS may not recognize the modification)"
        },
        "sonar": {
            "type": "bool",
	    "default": false,
	    "description": "data is scanning SWATH data"
        },
        "useIterativeChauvenet": {
            "type": "bool",
	    "default": false,
	    "description": "Whether to use Chauvenet&amp;#39;s criterion when using iterative methods. This should be used if the algorithm removes too many datapoints but it may lead to true outliers being retained."
        },
        "ransacMaxIterations": {
            "type": "integer",
            "default": 1000,
	    "description": "Maximum iterations for the RANSAC outlier detection algorithm."
        },
        "ransacMaxPercentRTThreshold": {
            "type": "integer",
            "default": 3,
	    "description": "Maximum threshold in RT dimension for the RANSAC outlier detection algorithm (in percent of the total gradient). Default is set to 3% which is around +/- 4 minutes on a 120 gradient."
        },
        "ransacSamplingSize": {
            "type": "integer",
            "default": 10,
	    "description": "Sampling size of data points per iteration for the RANSAC outlier detection algorithm."
        },
        "initialQualityCutoff": {
            "type": "number",
            "default": 0.5,
	    "description": "The initial overall quality cutoff for a peak to be scored (range ca. -2 to 2)"
        },
        "overallQualityCutoff": {
            "type": "number",
            "default": 5.5,
	    "description": "The overall quality cutoff for a peak to go into the retention time estimation (range ca. 0 to 10)"
        },
        "minPeptidesPerBin": {
            "type": "integer",
            "default": 1,
	    "description": "Minimal number of peptides that are required for a bin to counted as &amp;#39;covered&amp;#39;"
        },
        "span": {
            "type": "number",
            "default": 0.05,
	    "description": "Span parameter for lowess"
        },
        "num_nodes": {
            "type": "integer",
            "default": 5,
	    "description": "Number of nodes for b spline"
        },
        "rt_normalization_factor": {
            "type": "integer",
            "default": 100,
	    "description": "The normalized RT is expected to be between 0 and 1. If your normalized RT has a different range, pass this here (e.g. it goes from 0 to 100, set this value to 100)"
        },
        "quantification_cutoff": {
            "type": "integer",
            "default": 0,
	    "description": "Cutoff in m/z below which peaks should not be used for quantification any more"
        },
        "write_convex_hull": {
            "type": "bool",
	    "default": false,
	    "description": "Whether to write out all points of all features into the featureXML"
        },
        "spectrum_addition_method": {
            "type": "string",
            "default": "simple",
	    "description": "For spectrum addition, either use simple concatenation or use peak resampling"
        },
        "add_up_spectra": {
            "type": "integer",
            "default": 1,
	    "description": "Add up spectra around the peak apex (needs to be a non-even integer)"
        },
        "spacing_for_spectra_resampling": {
            "type": "number",
            "default": 0.005,
	    "description": "If spectra are to be added, use this spacing to add them up"
        },
        "uis_threshold_sn": {
            "type": "integer",
            "default": -1,
	    "description": "S/N threshold to consider identification transition (set to -1 to consider all)"
        },
        "uis_threshold_peak_area": {
            "type": "integer",
            "default": 0,
	    "description": "Peak area threshold to consider identification transition (set to -1 to consider all)"
        },
        "scoring_model": {
            "type": "string",
            "default": "default",
	    "description": "Scoring model to use"
        },
        "im_extra_drift": {
            "type": "integer",
            "default": 0,
	    "description": "Extra drift time to extract for IM scoring (as a fraction, e.g. 0.25 means 25% extra on each side)"
        },
        "strict": {
            "type": "boolean",
            "default": true,
	    "description": "Whether to error (true) or skip (false) if a transition in a transition group does not have a corresponding chromatogram."
        },
        "stop_after_feature": {
            "type": "integer",
            "default": -1,
	    "description": "Stop finding after feature (ordered by intensity; -1 means do not stop)."
        },
        "min_peak_width": {
            "type": "integer",
            "default": -1,
	    "description": "Minimal peak width (s), discard all peaks below this value (-1 means no action)."
        },
        "recalculate_peaks": {
            "type": "string",
            "default": "true",
	    "description": "Tries to get better peak picking by looking at peak consistency of all picked peaks. Tries to use the consensus (median) peak border if the variation within the picked peaks is too large."
        },
        "use_precursors": {
            "type": "bool",
	    "default": false,
	    "description": "Use precursor chromatogram for peak picking (note that this may lead to precursor signal driving the peak picking)"
        },
        "use_consensus": {
            "type": "bool",
            "default": true,
	    "description": "Use consensus peak boundaries when computing transition group picking (if false, compute independent peak boundaries for each transition)"
        },
        "recalculate_peaks_max_z": {
            "type": "number",
            "default": 0.75,
	    "description": "Determines the maximal Z-Score (difference measured in standard deviations) that is considered too large for peak boundaries. If the Z-Score is above this value, the median is used for peak boundaries (default value 1.0)."
        },
        "minimal_quality": {
            "type": "number",
            "default": -1.5,
	    "description": "Only if compute_peak_quality is set, this parameter will not consider peaks below this quality threshold"
        },
        "resample_boundary": {
            "type": "integer",
            "default": 15,
	    "description": "For computing peak quality, how many extra seconds should be sample left and right of the actual peak"
        },
        "compute_peak_shape_metrics": {
            "type": "bool",
	    "default": false,
	    "description": "Tries to compute a quality value for each peakgroup and detect outlier transitions. The resulting score is centered around zero and values above 0 are generally good and below -1 or -2 are usually bad."
        },
        "compute_total_mi": {
            "type": "bool",
	    "default": false,
	    "description": "Compute mutual information metrics for individual transitions that can be used for OpenSWATH/IPF scoring."
        },
        "boundary_selection_method": {
            "type": "string",
            "default": "largest",
	    "description": "Method to use when selecting the best boundaries for peaks."
        },
        "peak_width": {
            "type": "integer",
            "default": -1,
	    "description": "Force a certain minimal peak_width on the data (e.g. extend the peak at least by this amount on both sides) in seconds. -1 turns this feature off."
        },
        "signal_to_noise": {
            "type": "number",
            "default": 0.1,
	    "description": "Signal-to-noise threshold at which a peak will not be extended any more. Note that setting this too high (e.g. 1.0) can lead to peaks whose flanks are not fully captured."
        },
        "write_sn_log_messages": {
            "type": "bool",
	    "default": false,
	    "description": "Write out log messages of the signal-to-noise estimator in case of sparse windows or median in rightmost histogram bin"
        },
        "remove_overlapping_peaks": {
            "type": "bool",
            "default": true,
	    "description": "Try to remove overlapping peaks during peak picking"
        },
        "method": {
            "type": "string",
            "default": "corrected",
	    "description": "Which method to choose for chromatographic peak-picking (OpenSWATH legacy on raw data, corrected picking on smoothed chromatogram or Crawdad on smoothed chromatogram)."
        },
        "dia_extraction_window": {
            "type": "number",
            "default": 0.05,
	    "description": "DIA extraction window in Th or ppm."
        },
        "dia_extraction_unit": {
            "type": "string",
            "default": "Th",
	    "description": "DIA extraction window unit"
        },
        "dia_centroided": {
            "type": "bool",
	    "default": false,
	    "description": "Use centroided DIA data."
        },
        "dia_byseries_intensity_min": {
            "type": "integer",
            "default": 300,
	    "description": "DIA b/y series minimum intensity to consider."
        },
        "dia_byseries_ppm_diff": {
            "type": "integer",
            "default": 10,
	    "description": "DIA b/y series minimal difference in ppm to consider."
        },
        "dia_nr_isotopes": {
            "type": "integer",
            "default": 3,
	    "description": "DIA number of isotopes to consider."
        },
        "dia_nr_charges": {
            "type": "integer",
            "default": 4,
	    "description": "DIA number of charges to consider."
        },
        "peak_before_mono_max_ppm_diff": {
            "type": "integer",
            "default": 20,
	    "description": "DIA maximal difference in ppm to count a peak at lower m/z when searching for evidence that a peak might not be monoisotopic."
        },
        "max_iteration": {
            "type": "integer",
            "default": 10,
	    "description": "Maximum number of iterations using by Levenberg-Marquardt algorithm."
        },
        "use_shape_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the shape score (this score measures the similarity in shape of the transitions using a cross-correlation)"
        },
        "use_coelution_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the coelution score (this score measures the similarity in coelution of the transitions using a cross-correlation)"
        },
        "use_rt_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the retention time score (this score measure the difference in retention time)"
        },
        "use_library_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the library score"
        },
        "use_intensity_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the intensity score"
        },
        "use_nr_peaks_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the number of peaks score"
        },
        "use_total_xic_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the total XIC score"
        },
        "total_mi_score": {
            "type": "bool",
	    "default": false,
            "description": "Use the total MI score"
        },
        "use_sn_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the SN (signal to noise) score"
        },
        "use_mi_score": {
            "type": "bool",
            "default": true,
	    "description": "Use the MI (mutual information) score"
        },
        "use_dia_scores": {
            "type": "bool",
            "default": true,
	    "description": "Use the DIA (SWATH) scores. If turned off, will not use fragment ion spectra for scoring."
        },
        "use_ms1_correlation": {
            "type": "bool",
	    "default": true,
	    "description": "Use the correlation scores with the MS1 elution profiles"
        },
        "use_sonar_scores": {
            "type": "bool",
	    "default": false,
	    "description": "Use the scores for SONAR scans (scanning swath)"
        },
        "use_ion_mobility_scores": {
            "type": "bool",
	    "default": false,
	    "description": "Use the scores for Ion Mobility scans"
        },
        "use_ms1_fullscan": {
            "type": "bool",
	    "default": false,
	    "description": "Use the full MS1 scan at the peak apex for scoring (ppm accuracy of precursor and isotopic pattern)"
        },
        "use_ms1_mi": {
            "type": "bool",
            "default": true,
	    "description": "Use the MS1 MI score"
        },
        "use_uis_scores": {
            "type": "bool",
	    "default": false,
	    "description": "Use UIS scores for peptidoform identification"
        }
    }
}
